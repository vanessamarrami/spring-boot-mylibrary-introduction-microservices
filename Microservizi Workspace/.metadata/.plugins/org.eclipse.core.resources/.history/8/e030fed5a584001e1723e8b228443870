package com.statistics.service;

import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;
import java.util.Set;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.statistics.client.LibraryClient;
import com.statistics.dto.AuthorDto;
import com.statistics.dto.BookDto;
import com.statistics.dto.BookSlimDto;
import com.statistics.exception.NotFoundException;

import feign.FeignException;
import feign.FeignException.FeignClientException;
import feign.FeignException.FeignServerException;

@Service
public class StatisticsLibraryService {
	
	@Autowired
	LibraryClient client;
	
	public int numberOfTotalBooks() {
		List<BookDto> books = client.listAllBook();
		if(books.isEmpty()) throw new NotFoundException("There is no book!");
		return books.size();
	}
	
	public int basedGenre(String genre) {
		List<BookDto> books = new ArrayList<>();
		try {
			books = client.getByGenre(genre);
		}catch(FeignException e) {
			throw new NotFoundException(String.format("There are no books with genre %s!", genre));
		}
		return books.size();
	}
	
	public int basedPublicationDate(LocalDate date) {
		List<BookDto> books = client.getAfterPublicationDate(date);
		if(books.isEmpty()) throw new NotFoundException(String.format("There are no books published after %s!", date));
		return books.size();
	}
	
	public int basedAuthor(String firstName, String lastName) {
		AuthorDto author = client.listAuthorByNameAndSurname(firstName, lastName);
		if(author == null) throw new NotFoundException("There is no author with the specified name.");
		Set<BookSlimDto> books = author.getBooks();
		return books.size();
	}
	
	public double percent(double a, double b) {
		return a / b * 100; 
	}
}
